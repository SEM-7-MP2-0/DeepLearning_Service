name: Continuous Integration and Continuous Deployment

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]


env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: rfid-cluster    
  GKE_ZONE: us-central1-c   

jobs:
  build:
  runs-on: ubuntu-latest
  strategy:
    matrix:
      python-version: ["3.9"]
  steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Analysing the code with pylint
      run: |
        pylint $(git ls-files '*.py')

    - name: Analysing the code with flake8
      run: |
        flake8 $(git ls-files '*.py')

    - name: Analysing the code with black
      run: |
        black --check $(git ls-files '*.py')

  publish:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

    - name: Build using compose file
      run: docker compose build

    - name: Tag the image
      run: |
        docker tag deeplearningservice ${{ secrets.DOCKERHUB_USERNAME }}/rfid-deeplearningservice:latest
        docker tag deeplearningservice ${{ secrets.DOCKERHUB_USERNAME }}/rfid-deeplearningservice:${{ github.run_number }}
    - name: Push the image
      run: |
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/rfid-deeplearningservice:latest
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/rfid-deeplearningservice:${{ github.run_number }}

  deploy:
    runs-on: ubuntu-latest
    needs: [ publish ]
    steps:
    - uses: actions/checkout@master
    - name: kubectl - Google Cloud GKE cluster.
      uses: ameydev/gke-kubectl-action@master
      env:
        PROJECT_ID: ${{ env.PROJECT_ID }}
        APPLICATION_CREDENTIALS: ${{ secrets.GKE_SA_KEY }}
        CLUSTER_NAME: ${{ env.GKE_CLUSTER }}
        ZONE_NAME: ${{ env.GKE_ZONE }}
      with:
        args: delete deployment deeplearningservice-deployment --ignore-not-found=true echo "Deployment deeplearningservice-deployment deleted." && kubectl apply -f Kubernetes/
